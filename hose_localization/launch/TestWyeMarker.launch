<launch>
<arg name="remapped_tf" default="/tf" />
<arg name="output" default="log" />
<arg name="pcd_frame_id" default="/pcd_transform" />
<arg name="pointcloud_file" default="/home/jweisz/hose_oct8_B.pcd" />

<param name="robot_description" textfile="$(find drchubo_v3)/robots/drchubo_v3.urdf"/>


    <include file="$(find ud_sensor_head)/launch/ud_sim_full_robot.launch" >
        <arg name="rviz_file" value="$(find hose_localization)/way_marker.rviz"/>
    </include>

    <!--<include file="$(find hubo_state_publisher)/launch/hubo_state.launch"/> -->

    <node name="pcd_transfrom_publisher" pkg="tf" type="static_transform_publisher" args="-.5 0 0 0 0 0 /rightFoot /pcd_transform 100"  output="$(arg output)" >
      <remap from="/tf" to="$(arg remapped_tf)" />
    </node>

    <node name="pcd_publisher" pkg="pcl_ros" type="pcd_to_pointcloud" args="$(arg pointcloud_file) 1"  output="$(arg output)" >
      <remap from="/tf" to="$(arg remapped_tf)" />
      <param name="frame_id" value="$(arg pcd_frame_id)"/>
      <remap from="cloud_pcd" to="/rgbd_longrange/depth/points_xyzrgb_full"/>
    </node>

  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="rgbd_longrange/depth/points_xyzrgb_full" />
    <remap from="~output" to="rgbd_longrange/depth/points_xyzrgb"/>
    <param name="filter_field_name" value="x" />
    <param name="filter_limit_min" value="-2.5" />
    <param name="filter_limit_max" value="2.5" />
    <param name="filter_limit_negative" value="False" />
    <param name="leaf_size" value="0.03" />	 
    </node>


    <include file="$(find hose_localization)/launch/LaunchHoseMarkers.launch" >
    	     <arg name="output" value="screen" />
	     <arg name="output_point_cloud" value="/aligner_input" />
    </include>
   <node name="octomap_server" type="octomap_server_node" pkg="octomap_server">
   	 <remap from="cloud_in" to="/octomap_input"/>
	 <param name="frame_id" value = "/leftFoot"/>
	 <param name="base_frame_id" value = "/leftFoot"/>
	 <param name="occupancy_max_z" value="2.5"/>
	 <param name="occupancy_min_z" value="0"/>
	  <param name="filter_ground" value="1"/>
	  <param name="pointcloud_max" value="2.5"/>
    </node>		     

    <node name="RainbowIKServer" type="IK_server" pkg="RainbowIKServer"/>
    
    


</launch>
